#:schema https://json.schemastore.org/pyproject.json

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "descant"
dynamic = ["version"]
description = "A GDPR-compliant, JavaScript-based comment system."
license = "MIT"
authors = [{ name = "Keith Gaughan", email = "keith@gaughan.ie" }]
requires-python = ">=3.8"
readme = "README.md"
keywords = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "aiohttp==3.9.5",
    "cryptography==42.0.8",
    "jinja2==3.1.3",
    "pyjwt==2.8.0",
    "sqlalchemy~=1.4.0",
    "click==8.1.7",
]

[project.urls]
Documentation = "https://github.com/kgaughan/descant#readme"
Issues = "https://github.com/kgaughan/descant/issues"
Source = "https://github.com/kgaughan/descant"

[project.scripts]
descant = "descant.cli:main"

[tool.rye]
dev-dependencies = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "databases[aiosqlite]",
    "mypy>=1.11.1",
    "sqlalchemy2-stubs>=0.0.2a38",
]
universal = true
generate-hashes = true
managed = true

[tool.hatch.build.targets.sdist]
include = [
  "/src/descant",
  "/requirements.lock"
]

[tool.hatch.build.targets.wheel]
packages = ["src/descant"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/descant/_version.py"

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py39"
line-length = 120
src = ["src", "test"]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC002",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "PLR0913",
  "PLR2004",
  "PLW2901",
  "S310",
  "S317",
  "T201",
  "TID252",
  "UP006",
  "UP035",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "E501"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src/descant --junitxml=tests/results.xml --cov-report html"
junit_logging = "out-err"
junit_family = "xunit2"

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/descant/_version.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
